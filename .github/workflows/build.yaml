name: Build Image using Containerfile
on: [push]

env:
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: oci-workshop-march-2024
  IMAGE_TAG: branch-${{ github.ref_name }}

jobs:
  build:
    name: Build and push container image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
    - name: Log in to ghcr.io
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
        registry: ${{ env.IMAGE_REGISTRY }}
    - name: Buildah Action
      id: build_image
      uses: redhat-actions/buildah-build@v2
      with:
        image: oci-workshop-march-2024
        tags: ${{ env.IMAGE_NAME }} ${{ github.sha }}
        containerfiles: example.containerfile
    - name: Push To GHCR
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build_image.outputs.image }}
        tags: ${{ steps.build_image.outputs.tags }}
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
        extra-args: |
          --disable-content-trust
    - name: npm run build
      run: docker run -v ${{ github.workspace }}:/ociworkshop/workspace -w /ociworkshop/workspace "${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}" bash -c "mv /ociworkshop/node_modules/ /ociworkshop/workspace/ && pwd && ls -la && ls -la /ociworkshop/workspace/ && ls /ociworkshop/workspace/node_modules"
